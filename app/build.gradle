apply plugin: 'com.android.application'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'io.fabric'
apply plugin: 'androidx.navigation.safeargs'

buildProperties {
    keys {
        using project.file('keys.properties')
    }
}

android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion buildConfig.buildTools

    defaultConfig {
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode buildConfig.version.code
        versionName buildConfig.version.name

        applicationId buildConfig.packageName + modules.app.suffix

        buildConfigField "String", 'GIT_COMMIT_SHA', "\"${gitSha()}\""
        buildConfigField "long", 'GIT_COMMIT_TIMESTAMP', gitTimestamp().toString() + "L"

        buildConfigField "boolean", 'DEBUG_LOCAL', "false"
        buildConfigField "boolean", 'DEBUG_REMOTE', "true"

        buildConfigField "String", 'DATABASE_NAME', '"thermopile.objectbox"'

        manifestPlaceholders = [fabricApiKey: buildProperties.keys['fabric_manifest'].or("").string]
        buildConfigField "String", 'KEY_FABRIC', buildProperties.keys['fabric'].or("").string

//        manifestPlaceholders = [awarenessApiKey: buildProperties.keys['awareness'].or("").string]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ['objectbox.debug': 'true']
            }
        }
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def apkNameBuilder = new StringBuilder()

                apkNameBuilder.append(modules.app.archive)
                apkNameBuilder.append("_")
                apkNameBuilder.append(gitSha())
                apkNameBuilder.append("_")
                apkNameBuilder.append(output.baseName)
                apkNameBuilder.append(".apk")

                output.outputFileName = apkNameBuilder.toString().replace("-", "_")
            }
        }
    }
    buildTypes {
        debug {
            debuggable false
            adbOptions {
                installOptions "-g"
            }
        }
        release {
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
            universalApk false
        }
    }
}

dependencies {
    //internal
    implementation project(path: deps.internal.shared)

    //base
    compileOnly deps.android.things
    implementation deps.rx.java
    implementation deps.rx.android
    implementation deps.dagger.runtime
    annotationProcessor deps.dagger.compiler
    implementation deps.joda.android
    //data
    debugImplementation deps.objectbox.browser
    releaseImplementation deps.objectbox.android
    compileOnly deps.autovalue.runtime
    annotationProcessor deps.autovalue.compiler
    //presentation
    implementation deps.android.appcompat
    implementation deps.android.design
    implementation deps.android.recyclerview
    implementation deps.android.constraint

    implementation deps.android.navigation.fragment
    implementation(deps.android.navigation.ui) {
        exclude group: 'com.android.support', module: 'design'
    }
    implementation deps.butterknife.runtime
    annotationProcessor deps.butterknife.compiler
    //other
    implementation deps.timber.android
    implementation deps.firebase.core
    implementation(deps.crashlytics.android) {
        transitive = true
    }
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.objectbox'
